/**
 * @see <a href="https://www.cnblogs.com/gonjan-blog/p/6685611.html">reference</a>
 *
 * <p>1.代理类与委托类有同样的接口<br>
 *    2.代理类在执行目标类方法的时候可以添加其他业务需求
 * </p>
 * <p>1.静态代理：在程序运行之前，代理类的.class文件就已经生成</p>
 * <p>2.动态代理： 代理类在程序运行时创建</p>
 * <p>3.JDK动态代理是通过接口中的方法名，在动态生成的代理类中调用业务实现类的同名方法；
 *      CGlib动态代理是通过继承业务类，生成的动态代理类是业务类的子类，通过重写业务方法进行代理</p>
 */
package com.lyle.proxy;